pipeline {
  agent any
  environment {
    DOCKER_IMAGE = "juannguyen0211/huan-gametetris-mp:latest"
    KUBE_NAMESPACE = "huan-gametetris-mp-ns"
	CLUSTER_NAME = "huan-tetris-cluster"
    REGION       = "ap-southeast-1"
    KUBECONFIG   = "${WORKSPACE}/kubeconfig"
    YAML         = "${WORKSPACE}/huan-tetris-mp/terraform/manifests"
    DOCKER_FILE   = "${WORKSPACE}/huan-tetris-mp"
  }
  
  stages {
    stage('Checkout') {
	  steps {
		sshagent(['github-access']) {
		  sh 'rm -rf huan-tetris-mp'
		  sh 'git clone git@github.com:juannguyen0211/huan-tetris-mp.git'
		}
	  }
	}
  
    stage('Build Docker Image') {
      steps {
        sh 'docker build -t $DOCKER_IMAGE $DOCKER_FILE'
      }
    }
    stage('Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
          sh 'echo $PASSWORD | docker login -u $USERNAME --password-stdin'
          sh 'docker push $DOCKER_IMAGE'
        }
      }
    }
    stage('Deploy to EKS') {
      steps {
		withAWS(credentials: 'aws-access-creds', region: "${REGION}") {
			sh 'aws eks --region="$REGION" update-kubeconfig --name="$CLUSTER_NAME"'
			sh 'kubectl --kubeconfig="$KUBECONFIG" apply -f $YAML/01.namespace.yaml'
			sh 'kubectl --kubeconfig="$KUBECONFIG" apply -f $YAML/02.deployment.yaml'
			sh 'kubectl --kubeconfig="$KUBECONFIG" apply -f $YAML/03.service.yaml'
		}
      }
    }
  }
}
